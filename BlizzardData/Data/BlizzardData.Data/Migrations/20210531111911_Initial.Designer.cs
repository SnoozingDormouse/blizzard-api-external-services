// <auto-generated />
using System;
using BlizzardData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlizzardData.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210531111911_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlizzardData.Domain.Entities.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccountWide")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("RewardDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.AchievementCriteria", b =>
                {
                    b.Property<int>("AchievementId")
                        .HasColumnType("int");

                    b.Property<int>("CriteriaId")
                        .HasColumnType("int");

                    b.HasKey("AchievementId", "CriteriaId");

                    b.ToTable("AchievementCriterias");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.BattlePet", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Family")
                        .HasColumnType("int");

                    b.Property<bool>("IsAllianceOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBattlePet")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCapturable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHordeOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTradable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BattlePets");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.BattlePetAbility", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Cooldown")
                        .HasColumnType("int");

                    b.Property<int>("Family")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rounds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BattlePetAbilities");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.BattlePetBattlePetAbility", b =>
                {
                    b.Property<int>("BattlePetId")
                        .HasColumnType("int");

                    b.Property<int>("BattlePetAbilityId")
                        .HasColumnType("int");

                    b.Property<int>("RequiredLevel")
                        .HasColumnType("int");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.Property<int>("SlotColumn")
                        .HasColumnType("int");

                    b.HasKey("BattlePetId", "BattlePetAbilityId");

                    b.ToTable("BattlePetBattlePetAbilities");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.Character", b =>
                {
                    b.Property<decimal>("BlizzardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("CharacterClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Faction")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Race")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Realm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UserAccountId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("BlizzardId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.CharacterAchievement", b =>
                {
                    b.Property<decimal>("CharacterId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("AchievementId")
                        .HasColumnType("int");

                    b.Property<decimal>("CompletedTimestamp")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("CharacterId", "AchievementId");

                    b.ToTable("CharacterAchievements");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.CharacterCriteria", b =>
                {
                    b.Property<decimal>("CharacterId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("CriteriaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.HasKey("CharacterId", "CriteriaId");

                    b.ToTable("CharacterCriterias");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.Criteria", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AchievementId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Faction")
                        .HasColumnType("int");

                    b.Property<string>("OperatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatorType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.CriteriaCriteria", b =>
                {
                    b.Property<int>("CriteriaId")
                        .HasColumnType("int");

                    b.Property<int>("ChildCriteriaId")
                        .HasColumnType("int");

                    b.HasKey("CriteriaId", "ChildCriteriaId");

                    b.ToTable("CriteriaCriterias");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.CriteriaReputation", b =>
                {
                    b.Property<int>("CriteriaId")
                        .HasColumnType("int");

                    b.Property<int>("ReputationId")
                        .HasColumnType("int");

                    b.HasKey("CriteriaId", "ReputationId");

                    b.ToTable("CriteriaReputations");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentGoalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.GoalCriteria", b =>
                {
                    b.Property<int>("GoalId")
                        .HasColumnType("int");

                    b.Property<int>("CriteriaId")
                        .HasColumnType("int");

                    b.Property<int?>("AchievementId")
                        .HasColumnType("int");

                    b.HasKey("GoalId", "CriteriaId");

                    b.ToTable("GoalCriterias");
                });

            modelBuilder.Entity("BlizzardData.Domain.Entities.ReputationFaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CanParagon")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerFaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReputationTiers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReputationFactions");
                });
#pragma warning restore 612, 618
        }
    }
}
